{
  "codeLens.enable": true,
  "coc.preferences.extensionUpdateCheck": "weekly",
  "html.format.wrapLineLength": 100,
  "html.format.enable": true,
  "cmake.formatter": "cmake-format",
  "cmake.lsp.buildDirectory": "build",
  "languageserver": {
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"],
      "rootPatterns": [".ccls", "compile_commands.json", ".git/", ".hg/"],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls"
        },
        "highlight": {
          "lsRanges": true
        }
      }
    },
    "rust": {
      "command": "rust-analyzer",
      "filetypes": ["rust"],
      "rootPatterns": ["Cargo.toml"]
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "disableWorkspaceFolders": true,
      "filetypes": ["go"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "lua": {
      "command": "lua-lsp",
      "filetypes": ["lua"]
    },
    "vimls": {
      "command": "vim-language-server",
      "args": ["--stdio"],
      "initializationOptions": {
        "iskeyword": "@,48-57,_,192-255,-#",
        "vimruntime": "",
        "runtimepath": "",
        "diagnostic": {
          "enable": true
        },
        "indexes": {
          "runtimepath": true,
          "gap": 300,
          "count": 2,
          "projectRootPatterns": [
            "strange-root-pattern",
            ".git",
            "autoload",
            "plugin"
          ]
        },
        "suggest": {
          "fromVimruntime": true,
          "fromRuntimepath": false
        }
      },
      "filetypes": ["vim"]
    },
    "asm-lsp": {
      "command": "asm-lsp",
      "filetypes": ["asm", "s", "S"]
    }
  },
  // python --------------------------------------------------------------------------------------
  // "python.pythonPath": "/home/berger/.cache/pypoetry/virtualenvs/dataset-converter-ivAvLHQa-py3.6/bin/python",
  "python.analysis.autoImportCompletions": true,
  "python.pythonPath": "/usr/bin/python3",
  "python.linting.pylintEnabled": true,
  "python.linting.enabled": true,
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": ["-l", "95", "-t", "py36"],
  "python.venvPath": ["/home/berger/.cache/pypoetry/virtualenvs"],
  "pyright.organizeimports.provider": "isort",
  // yaml ----------------------------------------------------------------------------------------
  "yaml.format.enable": true,
  "yaml.format.singleQuote": false,
  "yaml.hover": true,
  "yaml.schemas": {
    "https://raw.githubusercontent.com/docker/compose/master/compose/config/config_schema_v2.0.json": "**/docker-compose*.yml"
  },
  // shell ---------------------------------------------------------------------------------------
  "sh.enable": true,
  // rust ----------------------------------------------------------------------------------------
  "rust-analyzer.checkOnSave.allTargets": true,
  "rust-analyzer.checkOnSave.allFeatures": true,
  // snippets ------------------------------------------------------------------------------------
  "snippets.userSnippetsDirectory": "/home/berger/.vim/plugged/vim-snippets/snippets/",
  "snippets.ultisnips.directories": [
    "UltiSnips",
    "/home/berger/.vim/plugged/vim-snippets/snippets/"
  ],
  "snippets.extends": {
    "cpp": ["c"],
    "javascriptreact": ["javascript"],
    "typescript": ["javascript"],
    "vimwiki": ["markdown", "liquid"]
  },
  // tsserver ------------------------------------------------------------------------------------
  "tsserver.log": "verbose",
  "typescript.format.enable": true,
  "javascript.format.enable": true,
  "javascript.showUnused": true,
  "xml.format.enabled": true,
  "xml.java.home": "/usr/lib/jvm/java-1.11.0-openjdk-amd64/",
  "deno.unstable": true,
  "deno.codeLens.implementations": true,
  "deno.codeLens.references": true,
  "deno.codeLens.referencesAllFunctions": true,
  "deno.lint": true,
  "deno.suggest.names": true,
  "deno.suggest.autoImports": true
}
